{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","createThought","thought","prompt","axios","post","then","res","setState","thoughts","state","data","newThought","catch","err","alert","JSON","stringify","get","this","console","log","className","onClick","map","thoughtModel","style","listStyleType","margin","borderBottom","_id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA+EeA,E,kDA1Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqCRC,cAAgB,WACd,IAAMC,EAAUC,OAAO,wBAClBD,GACLE,IACGC,KAAK,cAAe,CAAEH,YACtBI,MAAK,SAAAC,GAEJ,EAAKC,SAAS,CAAEC,SAAS,GAAD,mBAAM,EAAKC,MAAMD,UAAjB,CAA2BF,EAAII,KAAKC,kBAE7DC,OAAM,SAAAC,GAAG,OAAIC,MAAM,6BAAD,OAA8BC,KAAKC,UAAUH,SA7ClE,EAAKJ,MAAQ,CACXD,SAAU,IAHK,E,gEAOE,IAAD,OAClBL,IACGc,IAAI,SACJZ,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEC,SAAUF,EAAII,UAC1CE,MAAME,S,+BAGD,IACAN,EAAaU,KAAKT,MAAlBD,SAER,OADAW,QAAQC,IAAIZ,GAEV,sBAAKa,UAAU,MAAf,UAEE,wBAAQC,QAASJ,KAAKlB,cAAtB,4BAIA,6BACGQ,EAASe,KAAI,SAAAC,GAAY,OACxB,oBACEC,MAAO,CAAEC,cAAe,OAAQC,OAAQ,OAAQC,aAAc,mBADhE,SAIGJ,EAAavB,SAFTuB,EAAaK,iB,GA7BdC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f6a9db26.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thoughts: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('/api/')\n      .then(res => this.setState({ thoughts: res.data }))\n      .catch(alert);\n  }\n\n  render() {\n    const { thoughts } = this.state;\n    console.log(thoughts)\n    return (\n      <div className=\"App\">\n        {/* Buttons to interact with API */}\n        <button onClick={this.createThought}>Create Thought</button>\n        {/* <button onClick={this.deleteThoughts}>Delete Thoughts</button> */}\n        {/* <button onClick={this.seedThoughts}>Seed Thoughts</button> */}\n        {/* List of thoughts in Cosmos DB */}\n        <ul>\n          {thoughts.map(thoughtModel => (\n            <li\n              style={{ listStyleType: 'none', margin: '20px', borderBottom: '1px solid black' }}\n              key={thoughtModel._id}\n            >\n              {thoughtModel.thought}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  createThought = () => {\n    const thought = prompt('Enter your thought: ');\n    if (!thought) return;\n    axios\n      .post('/api/create', { thought })\n      .then(res => {\n        // console.log(\"RRRRR \", res);\n        this.setState({ thoughts: [...this.state.thoughts, res.data.newThought] })\n      })\n      .catch(err => alert(`Failed to create thought\\n${JSON.stringify(err)}`));\n  };\n\n  // deleteThoughts = () => {\n  //   const doDelete = window.confirm('Delete all Thoughts?');\n  //   if (!doDelete) return;\n  //   axios\n  //     .delete('/api/thoughts/')\n  //     .then(res => this.setState({ thoughts: [] }))\n  //     .catch(err => alert(`Failed to delete all thoughts\\n${JSON.stringify(err)}`));\n};\n\n//   seedThoughts = () => {\n//     const doSeed = window.confirm('Do you want to seed random data?');\n//     if (!doSeed) return;\n//     axios\n//       .post('/api/thoughts/seed', {})\n//       .then(() => {\n//         axios\n//           .get('/api/thoughts/')\n//           .then(res => this.setState({ thoughts: res.data }))\n//           .catch(alert);\n//       })\n//       .catch(alert);\n//   };\n// }\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}